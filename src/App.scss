* {
  padding: 0;
  margin: 0;
}
@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@100&display=swap");
body {
  background-color: #222;
  font-size: 24px;
  color: #fff;
  min-height: 100vh;
  display: grid;
  place-items: center;

  font-family: "Roboto", sans-serif;
}
#root {
  transform: perspective(900px);
  transform-style: preserve-3d;
}
.calculator {
  border: 2px solid blue;
  border-radius: 1em;
  padding: 1em;
  transition: 300ms;
  transform: rotateY(10deg) rotateX(10deg);
  transition: 300ms;
  --color-opacity: 0.4;
  &:hover {
    transform: initial;

    box-shadow: 0 0 2em rgba(0, 0, 255, var(--color-opacity));
  }
  &.on {
    transform: initial;
  }
}
.wrapper {
  $size: 60px;
  display: grid;
  grid-template-columns: repeat(4, #{$size});
  grid-template-rows: 1em $size $size $size $size $size $size;
  gap: 0.1em;
  padding-top: 2em;
  border: 0.5em solid #000;
  margin: auto;
  width: max-content;
  background-color: #021936;
  border-radius: inherit;
  overflow: hidden;

  position: relative;
}

@keyframes turn {
  50% {
    transform: rotateY(90deg);
  }
}
button {
  border: 0;
  cursor: pointer;
  background-color: #223344;
  color: inherit;
  font-family: inherit;
  font-weight: bold;
  /* font-size: 0.8em; */
}

.clear-btn {
  grid-column: span 2;
}

.special-btn {
  background-color: #a3a3a3;
  color: #000;
}

.equals {
  grid-row: span 2;
  background-color: yellow;
}

.black-spot {
  $size: 1em;
  position: absolute;
  top: 0.5em;
  width: 4em;
  height: $size;
  background-color: #000;
  inset-inline: 0;
  margin: auto;

  border-radius: 3em;

  z-index: 3;
  &:before {
    content: "";
    position: absolute;
    $x: 0.2em;
    top: $x;
    right: $x;
    height: calc(#{$size} - 2 * #{$x});
    border-radius: 50%;
    aspect-ratio: 1;
    background: linear-gradient(120deg, transparent, rgb(255, 255, 255));
    filter: blur(0.1em);
    opacity: 0.3;
  }
}

.wrapper {
  &::after {
    content: "";
    position: absolute;
    inset: -0.1em;
    border-radius: 0.5em;
    background-color: rgb(24, 1, 1);
    opacity: 0;
    pointer-events: none;
    transition: 300ms;
  }
}

.wrapper:not(.on) {
  &::after {
    opacity: 1;
    pointer-events: all;
  }
}
